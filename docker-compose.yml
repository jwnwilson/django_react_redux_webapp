version: '2'
services:
  client:
    image: node:6.11.2
    user: root
    working_dir: /app/src/client
    command: npm run start
    tty: true
    ports:
      - 0.0.0.0:3000:3000
    volumes:
      - .:/app
      - node_modules:/app/src/client/node_modules

  pyenv:
    build:
      context: .
      dockerfile: ./ops/Dockerfile_server
    user: root
    env_file:
      - web.env
    working_dir: /app/src/server
    command: pipenv install --dev
    tty: true
    volumes:
      - .:/app
      - venv:/app/src/server/.venv

  server:
    build:
      context: .
      dockerfile: ./ops/Dockerfile_server
    user: root
    env_file:
      - web.env
    working_dir: /app/src/server
    command: ./.venv/bin/python manage.py runserver 0.0.0.0:8000
    tty: true
    ports:
      - 0.0.0.0:8000:8000
    volumes:
      - .:/app
      - venv:/app/src/server/.venv
      - media:/app/src/server/media
    links:
      - db
      # - cache
    depends_on:
      - db
      # - cache
      - pyenv
  
  server-no-db: 
    build:
      context: .
      dockerfile: ./ops/Dockerfile_server
    user: root
    env_file:
      - web.env
    working_dir: /app/src/server
    command: ./.venv/bin/pytest
    tty: true
    volumes:
      - .:/app
      - venv:/app/src/server/.venv
      - media:/app/src/server/media
    depends_on:
      - pyenv
  
  # cache:
  #  image: memcached
  #  ports:
  #    - "11211:11211"
  #  entrypoint:
  #   - memcached
  #   - -m 64

  db:
    build:
      context: .
      dockerfile: ./ops/Dockerfile_db
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  node_modules:
  venv:
  db_data:
  media:
